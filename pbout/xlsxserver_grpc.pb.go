// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.9
// source: xlsxserver.proto

package pbout

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// SaveInGRPCServerClient is the client API for SaveInGRPCServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SaveInGRPCServerClient interface {
	PersistValues(ctx context.Context, in *XlsxValues, opts ...grpc.CallOption) (*XlsxValuesResponse, error)
	GetXlsxValues(ctx context.Context, in *GetValRequest, opts ...grpc.CallOption) (*XlsxValues, error)
}

type saveInGRPCServerClient struct {
	cc grpc.ClientConnInterface
}

func NewSaveInGRPCServerClient(cc grpc.ClientConnInterface) SaveInGRPCServerClient {
	return &saveInGRPCServerClient{cc}
}

func (c *saveInGRPCServerClient) PersistValues(ctx context.Context, in *XlsxValues, opts ...grpc.CallOption) (*XlsxValuesResponse, error) {
	out := new(XlsxValuesResponse)
	err := c.cc.Invoke(ctx, "/pbout.SaveInGRPCServer/PersistValues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *saveInGRPCServerClient) GetXlsxValues(ctx context.Context, in *GetValRequest, opts ...grpc.CallOption) (*XlsxValues, error) {
	out := new(XlsxValues)
	err := c.cc.Invoke(ctx, "/pbout.SaveInGRPCServer/GetXlsxValues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SaveInGRPCServerServer is the server API for SaveInGRPCServer service.
// All implementations must embed UnimplementedSaveInGRPCServerServer
// for forward compatibility
type SaveInGRPCServerServer interface {
	PersistValues(context.Context, *XlsxValues) (*XlsxValuesResponse, error)
	GetXlsxValues(context.Context, *GetValRequest) (*XlsxValues, error)
	mustEmbedUnimplementedSaveInGRPCServerServer()
}

// UnimplementedSaveInGRPCServerServer must be embedded to have forward compatible implementations.
type UnimplementedSaveInGRPCServerServer struct {
}

func (UnimplementedSaveInGRPCServerServer) PersistValues(context.Context, *XlsxValues) (*XlsxValuesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PersistValues not implemented")
}
func (UnimplementedSaveInGRPCServerServer) GetXlsxValues(context.Context, *GetValRequest) (*XlsxValues, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetXlsxValues not implemented")
}
func (UnimplementedSaveInGRPCServerServer) mustEmbedUnimplementedSaveInGRPCServerServer() {}

// UnsafeSaveInGRPCServerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SaveInGRPCServerServer will
// result in compilation errors.
type UnsafeSaveInGRPCServerServer interface {
	mustEmbedUnimplementedSaveInGRPCServerServer()
}

func RegisterSaveInGRPCServerServer(s grpc.ServiceRegistrar, srv SaveInGRPCServerServer) {
	s.RegisterService(&SaveInGRPCServer_ServiceDesc, srv)
}

func _SaveInGRPCServer_PersistValues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(XlsxValues)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SaveInGRPCServerServer).PersistValues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbout.SaveInGRPCServer/PersistValues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SaveInGRPCServerServer).PersistValues(ctx, req.(*XlsxValues))
	}
	return interceptor(ctx, in, info, handler)
}

func _SaveInGRPCServer_GetXlsxValues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetValRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SaveInGRPCServerServer).GetXlsxValues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbout.SaveInGRPCServer/GetXlsxValues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SaveInGRPCServerServer).GetXlsxValues(ctx, req.(*GetValRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SaveInGRPCServer_ServiceDesc is the grpc.ServiceDesc for SaveInGRPCServer service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SaveInGRPCServer_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pbout.SaveInGRPCServer",
	HandlerType: (*SaveInGRPCServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PersistValues",
			Handler:    _SaveInGRPCServer_PersistValues_Handler,
		},
		{
			MethodName: "GetXlsxValues",
			Handler:    _SaveInGRPCServer_GetXlsxValues_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "xlsxserver.proto",
}
